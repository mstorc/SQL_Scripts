
--RUN AGAINST DESIRED DB
--SET LAST UPDATED TO FIND ANYTHING UPDATED AFTER THAT DATE
--TABLE NAME TO FILER TABLES USING LIKE STATEMENT, use % wildcard if desired

DECLARE @DB_NAME AS VARCHAR(255) = DB_NAME()
DECLARE @LAST_UPDATED AS DATETIME = '2018-08-10'
DECLARE @TABLE_NAME AS VARCHAR(255) = 'TABLE_NAME' 

CREATE TABLE #PT_TABLES 
(
ID INT IDENTITY(1,1)
,TABLE_NAME VARCHAR(250) NULL
,LAST_USER_UPDATE DATETIME NULL

)

CREATE TABLE #PT_DEP
(
TABLE_NAME VARCHAR(250) NULL
,DEPENDANT_OBJECT_NAME VARCHAR(250) NULL
,DEPENDANT_OBJECT_TYPE VARCHAR(250) NULL
,LAST_EXEC DATETIME NULL


)

SELECT o.name, 
       ps.last_execution_time 
	   INTO #PROC_EXEC
FROM   sys.dm_exec_procedure_stats ps 
INNER JOIN 
       sys.objects o 
       ON ps.object_id = o.object_id 
WHERE  DB_NAME(ps.database_id) = @DB_NAME



	   SELECT   
    OBJECT_NAME(object_id, database_id) AS 'trigger_name'
    ,MAX(d.last_execution_time) 'last_execution_time'
	INTO #TRIGGER_EXEC
FROM sys.dm_exec_trigger_stats AS d  
WHERE DB_NAME(database_id) = @DB_NAME
GROUP BY OBJECT_NAME(object_id, database_id)

INSERT INTO #PT_TABLES(TABLE_NAME,LAST_USER_UPDATE)
SELECT   OBJECT_NAME(S.[OBJECT_ID]) AS [OBJECT NAME], 
		 MAX(S.LAST_USER_UPDATE) 'LAST_USER_UPDATE'
FROM     SYS.DM_DB_INDEX_USAGE_STATS AS S 
         INNER JOIN SYS.INDEXES AS I 
           ON I.[OBJECT_ID] = S.[OBJECT_ID] 
              AND I.INDEX_ID = S.INDEX_ID 
WHERE    OBJECTPROPERTY(S.[OBJECT_ID],'ISUSERTABLE') = 1 
AND OBJECT_NAME(S.[OBJECT_ID]) LIKE @TABLE_NAME
AND LAST_USER_UPDATE > @LAST_UPDATED
GROUP BY
S.[OBJECT_ID]
ORDER BY
LAST_USER_UPDATE DESC

DECLARE @ID AS INT = (SELECT MAX(ID) FROM #PT_TABLES)
DECLARE @OBJECT AS VARCHAR(250)

WHILE @ID > 0
BEGIN

SET @OBJECT = (SELECT TABLE_NAME FROM #PT_TABLES WHERE ID = @ID)
INSERT INTO #PT_DEP(DEPENDANT_OBJECT_NAME, DEPENDANT_OBJECT_TYPE)
EXEC SP_DEPENDS @OBJNAME = @OBJECT



UPDATE #PT_DEP
SET TABLE_NAME = @OBJECT
WHERE TABLE_NAME IS NULL

UPDATE #PT_DEP
SET LAST_EXEC =
(
SELECT max(last_execution_time) 
FROM   #PROC_EXEC
WHERE  name = RIGHT(DEPENDANT_OBJECT_NAME,LEN(DEPENDANT_OBJECT_NAME)-4)
)
WHERE DEPENDANT_OBJECT_TYPE = 'stored procedure'

UPDATE #PT_DEP
SET LAST_EXEC =
(
SELECT max(last_execution_time)
FROM   #TRIGGER_EXEC
WHERE  trigger_name = RIGHT(DEPENDANT_OBJECT_NAME,LEN(DEPENDANT_OBJECT_NAME)-4)
)
WHERE DEPENDANT_OBJECT_TYPE = 'TRIGGER'


SET @ID = @ID -1
END

SELECT
TABLE_NAME
,LAST_USER_UPDATE
FROM #PT_TABLES

SELECT 
* 
FROM #PT_DEP 
WHERE LAST_EXEC IS NOT NULL



DROP TABLE #PT_DEP, #PT_TABLES, #PROC_EXEC, #TRIGGER_EXEC

